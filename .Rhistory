library(devtools)
usethis::use_readme_rmd()
library(tidyverse)
library(here)
library(labelled)
library(sjlabelled)
# get raw data -----------------------------------------------------------------
read_zip_online <- function(url, file.to.extract = NULL) {
temp <- tempfile()
download.file(url, temp, mode = "wb")
x <- unzip(temp, list = T)
if (is.null(file.to.extract)) {
print(x)
file.to.extract <- as.integer(readline(prompt = "Enter file number: "))
}
data <- haven::read_sav(unz(temp, x$Name[file.to.extract]))
unlink(temp)
return(data)
}
raw <- read_zip_online("https://wrp.lrfoundation.org.uk/lrf_wrp_2021_full_data.zip", file.to.extract = 1)
raw$projectionWeight <- raw$PROJWT_2019
raw$projectionWeight <- ifelse(is.na(raw$projectionWeight), raw$PROJWT_2021, raw$projectionWeight)
wrp <- raw %>%
janitor::clean_names("lower_camel") %>%
mutate(iso3C = countrycode::countrycode(country, "country.name", "iso3c", custom_match = c("Kosovo" = "KSV"))) %>%
relocate(iso3C, .after = country) %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp$countryIncomeLevel <- ifelse(is.na(wrp$countryIncomeLevel),
as.character(wrp$countryIncomeLevel2021), wrp$countryIncomeLevel
)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 7, 234)) %>%
mutate(disaggregator = pos %in% c(2, 14:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
View(disaggregations)
View(wrp)
wrp <- raw %>%
janitor::clean_names("lower_camel") %>%
mutate(iso3C = countrycode::countrycode(country, "country.name", "iso3c", custom_match = c("Kosovo" = "KSV"))) %>%
relocate(iso3C, .after = country) %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp$countryIncomeLevel <- ifelse(is.na(wrp$countryIncomeLevel),
as.character(wrp$countryIncomeLevel2021), wrp$countryIncomeLevel
)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 7, 234)) %>%
mutate(disaggregator = pos %in% c(3, 14:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
wrp <- raw %>%
janitor::clean_names("lower_camel") %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp$countryIncomeLevel <- ifelse(is.na(wrp$countryIncomeLevel),
as.character(wrp$countryIncomeLevel2021), wrp$countryIncomeLevel
)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 7, 234)) %>%
mutate(disaggregator = pos %in% c(3, 14:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
View(disaggregations)
View(questions)
questions$WRP_UID = questions$variable
View(questions)
View(regions)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 7, 232)) %>%
mutate(disaggregator = pos %in% c(3, 14:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
questions$WRP_UID = questions$variable
View(regions)
View(wrp)
View(wrp_dictionary)
wrp <- raw %>%
janitor::clean_names("lower_camel") %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp$countryIncomeLevel <- ifelse(is.na(wrp$countryIncomeLevel),
as.character(wrp$countryIncomeLevel2021), wrp$countryIncomeLevel
)
View(wrp_dictionary)
View(raw)
View(raw)
wrp <- raw %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp <- raw %>%
janitor::clean_names("lower_camel") %>%
# change 1: convert haven_labelled variables to factors ----
mutate_if(haven::is.labelled, haven::as_factor)
wrp$countryIncomeLevel <- as.character(wrp$countryIncomeLevel2019)
wrp$countryIncomeLevel <- ifelse(is.na(wrp$countryIncomeLevel),
as.character(wrp$countryIncomeLevel2021), wrp$countryIncomeLevel
)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 6, 232)) %>%
mutate(disaggregator = pos %in% c(3, 14:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
View(wrp_dictionary)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 6, 233)) %>%
mutate(disaggregator = pos %in% c(3, 12:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
questions$WRP_UID = questions$variable
View(disaggregations)
View(questions)
questions$WRP_UID = toupper(questions$variable)
View(questions)
View(wrp)
# wrp = wrp %>%
# # change 2: convert variable labels to variable names ----
#   sjlabelled::label_to_colnames()
wrp_data <- wrp
usethis::use_data(wrp_data, regions, disaggregations, questions, overwrite = TRUE, internal = T, compress = "xz")
View(questions)
geography = "country"
question_uid = "Q1"
question_uid = match(questions_uid, questions$WRP_UID)
questions_uid = questions$pos[questions_uid]
question_uid = match(question_uid, questions$WRP_UID)
questions$pos[questions_uid]
question_uid = questions$pos[question_uid]
yr <- match("year", dict$variable)
#error check that geograpy and questions are in dataset
geography <- case_when(
geography == "country" ~ regions$pos[1],
geography == "region" ~ regions$pos[2],
geography == "income" ~ regions$pos[3])
yr <- match("year", dict$variable)
wgt <- ifelse(geography == 2, match("wgt", dict$variable), match("projectionWeight", dict$variable))
df <- wrp_data
dict <- wrp_dictionary
disaggregation <- dict %>% filter(.data$disaggregator)
wrp_agg <- df[, c(geography, yr, wgt, question_uid)]
yr <- match("year", dict$variable)
dict$variable
View(wrp_dictionary)
View(raw)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 6, 233)) %>%
mutate(disaggregator = pos %in% c(3, 12:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
View(wrp_dictionary)
wrp_dictionary$label <- ifelse(is.na(wrp_dictionary$label), "World Bank Income Levels", wrp_dictionary$label)
wrp_dictionary = wrp_dictionary[wrp_dictionary$regional_disaggregate | wrp_dictionary$disaggregator | wrp_dictionary$question,]
wrp_dictionary$WRP_UID = NA
wrp_dictionary$WRP_UID[wrp_dictionary$regional_disaggregate] = paste0("REG", 1:sum(wrp_dictionary$regional_disaggregate))
wrp_dictionary$WRP_UID[wrp_dictionary$disaggregator] = paste0("DIS", 1:sum(wrp_dictionary$disaggregator))
wrp_dictionary$WRP_UID[wrp_dictionary$question] = paste0("Q", 1:sum(wrp_dictionary$question))
wrp_dictionary = wrp_dictionary %>% select(WRP_UID, pos, variable, label, levels)
regions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "REG",]
disaggregations = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,3) == "DIS",]
questions = wrp_dictionary[substr(wrp_dictionary$WRP_UID,1,1) == "Q",]
questions$WRP_UID = toupper(questions$variable)
View(wrp_dictionary)
wrp_dictionary <- labelled::generate_dictionary(wrp) %>%
mutate(regional_disaggregate = pos %in% c(2, 6, 233)) %>%
mutate(disaggregator = pos %in% c(3, 12:21)) %>%
mutate(question = substr(variable, 1, 1) == "q" | substr(variable, 1, 2) == "vh")
year_column = match("year", wrp_dictionary$variable)
source("~/github/wrp/data-raw/format_wrp_from_raw.R")
devtools::release()
devtools::release()
devtools::release()
